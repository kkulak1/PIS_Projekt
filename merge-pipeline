pipeline {
    agent any

    tools {
        jdk 'jdk-17'
        maven "M3"
        git "Default"
    }

    triggers {
        githubPullRequests(
            autoCloseFailedPullRequests: true,
            approveIfSuccess: true,
            branches: '.*',
            onlyTriggerPhrase: '',
            orgWhitelist: '',
            orgBlacklist: '',
            skipBuildPhrase: '',
            triggerPhrase: '',
            allowMembersOfWhitelistedOrgsAsAdmin: false,
            extensions: [
                [
                    $class: 'StatusFilterExtension',
                    statuses: [
                        [context: 'continuous-integration/jenkins/pr-merge', state: 'FAILURE'],
                        [context: 'continuous-integration/jenkins/pr-merge', state: 'SUCCESS']
                    ]
                ]
            ]
        )
    }



    stages {
        stage('Deploying') {
            steps {
                sh "mvn deploy"
            }
        }
    }

    post {
        success {
            githubNotify(
                status: 'SUCCESS',
                account: "kkulak1",
                credentialsId: "github",
                context: 'merge pipeline',
                description: 'Build succeeded',
                repo: "PIS_projekt",
                sha: env.GIT_COMMIT
            )
        }
        failure {
            githubNotify(
                status: 'FAILURE',
                account: "kkulak1",
                credentialsId: "github",
                context: 'merge pipeline',
                description: 'Build failed',
                repo: "PIS_projekt",
                sha: env.GIT_COMMIT
            )
        }
    }
}

